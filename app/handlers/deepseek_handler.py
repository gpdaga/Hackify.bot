from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from app.generate import ai_generate
from app.keyboards import back_to_menu_button
import logging

router = Router()
logger = logging.getLogger(__name__)

@router.message(F.text == "Deep seek —Ä–∞–∑–≥–æ–≤–æ—Äüí¨")
async def deepseek_chat(message: Message, state: FSMContext):
    await message.answer(
        "üí¨ –†–µ–∂–∏–º –æ–±—â–µ–Ω–∏—è —Å DeepSeek\n–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å:",
        reply_markup=back_to_menu_button()
    )
    await state.set_state("deepseek_chat")

@router.message(F.text == "Deep seek –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞üîç")
async def deepseek_code_check(message: Message, state: FSMContext):
    await message.answer(
        "üîç –†–µ–∂–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–¥:",
        reply_markup=back_to_menu_button()
    )
    await state.set_state("deepseek_code")

@router.message(F.state == "deepseek_chat")
@router.message(F.state == "deepseek_code")
async def handle_deepseek(message: Message, state: FSMContext):
    try:
        response = await ai_generate(message.text)
        await message.answer(
            response,
            reply_markup=back_to_menu_button()
        )
    except Exception as e:
        logger.error(f"DeepSeek error: {e}")
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏!")
    await state.clear()


@router.message(F.state == "deepseek_chat")
async def handle_deepseek(message: Message, state: FSMContext):
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ
        processing_msg = await message.answer("üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...")

        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
        response = await ai_generate(message.text)

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–û–±—Ä–∞–±–æ—Ç–∫–∞"
        await processing_msg.delete()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        await message.answer(
            f"üí¨ –û—Ç–≤–µ—Ç:\n{response}",
            reply_markup=back_to_menu_button()
        )

    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")
        await message.answer(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞",
            reply_markup=back_to_menu_button()
        )
    finally:
        await state.clear()